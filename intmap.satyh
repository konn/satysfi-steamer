@import: local-list
@import: ordmap
@import: ordering

% Binary heap, implemented as AVL tree.
module IntMap : sig
  type 'a intmap

  val singleton : int -> 'a -> 'a intmap
  val empty     : 'a intmap
  val insert    : int -> 'a -> 'a intmap -> 'a intmap
  val from-list : (int * 'a) list -> 'a intmap
  val to-list   : 'a intmap -> (int * 'a) list
  val keys      : 'a intmap -> int list
  val lookup    : int -> 'a intmap -> 'a option

end = struct
  type 'a intmap = int 'a OrdMap.ordmap

  let imap = OrdMap.ordmap Ordering.int

  let empty         = OrdMap.empty imap
  let singleton i a = OrdMap.singleton imap i a
  let insert i a d  = OrdMap.insert imap i a d
  let from-list ls  = OrdMap.from-list imap ls
  let to-list d     = OrdMap.to-list   imap d
  let keys d        = OrdMap.keys imap d
  let lookup i d    = OrdMap.lookup imap i d
end
